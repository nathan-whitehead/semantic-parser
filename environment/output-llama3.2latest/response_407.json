{
  "task_id": 407,
  "code": "def candidate(digits):\n    # Convert the input string into a list of integers for easier manipulation\n    digits = [int(x) for x in str(digits)]\n    \n    # Find the first pair of digits from the right where the left digit is smaller than the right digit\n    i = len(digits) - 1\n    while i > 0 and digits[i] >= digits[i-1]:\n        i -= 1\n    \n    if i <= 0:\n        return None  # No rearrangement can form a bigger number\n\n    # Find the smallest digit on the right side that is larger than the left digit of the pair\n    j = len(digits) - 1\n    while digits[j] <= digits[i-1]:\n        j -= 1\n    \n    # Swap the two digits\n    digits[i-1], digits[j] = digits[j], digits[i-1]\n    \n    # Sort the rest of the digits in ascending order\n    sorted_digits = sorted(digits)\n    # Initialize index for swap back\n    k = len(sorted_digits) - 1\n    \n    # Iterate through each digit after swapping, starting from the first position on the right\n    for idx, val in enumerate(sorted_digits):\n        if idx < i:\n            continue\n        \n        digits[idx] = val\n        # If we find a larger number by swapping back, break and return the result\n        if idx > 0 and digits[idx-1] < val:\n            k = idx - 1\n            break\n\n    # Swap back any digits that were swapped to create a bigger number\n    sorted_digits[i:] = digits[i:]\n    \n    # Convert the list back into a string and return it\n    result = ''.join(map(str, sorted_digits))\n    return result",
  "explanation": "Explanation\n------------\n\nThe original code attempts to create the next bigger number by rearranging the digits of a given number. However, it contains several issues, including swapping digits incorrectly, failing to consider all possible combinations, and incorrect handling of the last digit. The corrected version sorts the digits after swapping them and uses a more efficient approach to find the smallest digit on the right side that is larger than the left digit.\n\npython",
  "num_iterations": 6,
  "error_msg": "Traceback (most recent call last):\n  File \"/home/runner/sandbox/temp_code.py\", line 44, in <module>\n    assert candidate(12)==21\n           ^^^^^^^^^^^^^^^^^\nAssertionError\n\n",
  "success": false
}